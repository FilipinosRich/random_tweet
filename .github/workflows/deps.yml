name: 'zip-deps'

on:
  push:
    branches:
      - main


jobs:
  zip_deps:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: "3.10"
    - name: Install Python Virtual ENV
      run: pip3 install virtualenv

    - name: Virtual ENV
      uses: actions/cache@v2
      id: cache-venv
      with:
        path: venv
        key: ${{ runner.os }}-venv-${{ hashFiles('**/requirements*.txt') }}
        restore-keys: |
          ${{ runner.os }}-venv-

    - name: Activate Virtual ENV
      run: python3 -m venv venv && source venv/bin/activate && pip3 install -r requirements.txt
      if: steps.cache-venv.outputs.cache-hit != 'true'

    - name: Test Step
      run: |
        ls venv/lib/python3.10/site-packages/
        pwd
        cd ..
        pwd

    - name: Clean Virtual ENV
      run: |
        cd venv/lib/python3.10/site-packages/
        find . -type d -name "tests" -exec rm -rf {} + 
        find . -type d -name "__pycache__" -exec rm -rf {} + 
        rm -rf ./{caffe2,wheel,wheel-*,pkg_resources,boto*,aws*,pip,pip-*,pipenv,setuptools}
        rm -rf ./{*.egg-info,*.dist-info}
        find . -name \*.pyc -delete

    - name: Create archive of dependencies
      run: |
        cd venv/lib/python3.10/site-packages/
        ls .
        [[ -d torch ]] && cd torch && zip -r9 torch.zip . && cd .. && rm -r torch
        [[ -d torch ]] && cd torch && zip -r9 torch.zip . && cd .. && rm -r torch
        zip -r9 ./pytorch_fn.zip .

    - name: Upload artifact to S3
      uses: actions/upload-artifact@v2
      with:
        name: pytorch_fn.zip
        path: pytorch_fn.zip
        retention-days: 1
